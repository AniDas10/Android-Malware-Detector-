"""
Here we shall use different algorithms to select the most relevant features
All experiments can be conducted independently in this section inside the main function.
"""

from sklearn.feature_selection import SelectKBest
from sklearn.ensemble import RandomForestClassifier
from sklearn.feature_selection import SelectFromModel
import pandas as pd
from sklearn.linear_model import Lasso


def feature_selection(df , target):
    #model = RandomForestClassifier()
    y = target
    #sfm = SelectFromModel(estimator=model)
    sfm = SelectFromModel(Lasso(alpha=0.005, random_state=0))

    X = df.drop(columns=['Class', 'kfold'])
    col_names = X.columns.values
    X_transformed = sfm.fit_transform(X,y)

    support = sfm.get_support()
    return [x for x, y in zip(col_names, support) if y == True]
    
if __name__ == '__main__':
    df = pd.read_csv('../dataset/train_with_folds.csv')
    redundant_cols = ['Unnamed: 0','Unnamed: 0.1', 'Related apps','Description', 'Category','App', 'Package']
    df.loc[:,'Dangerous permissions count'] = df['Dangerous permissions count'].fillna(value=0)
    #safeCols = [col for col in df.columns.values if '(S)' in col]
    #print(df.columns)
    df = df.drop(columns=redundant_cols)
    print(len(feature_selection(df, df.Class.values)))